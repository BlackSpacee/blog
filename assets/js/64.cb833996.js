(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{278:function(t,s,e){"use strict";e.r(s);var a=e(19),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"起步"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#起步"}},[t._v("#")]),t._v(" 起步")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("路由")]),t._v(" "),e("p",[t._v("路由是一个网络工程里面的术语。")]),t._v(" "),e("p",[t._v("路由（routing）就是通过互联的网络把信息从源地址传输到目的地址的活动")])]),t._v(" "),e("p",[t._v("路由器提供了两种机制: 路由和转送.\n路由是决定数据包从来源到目的地的路径.\n转送将输入端的数据转移到合适的输出端.")]),t._v(" "),e("p",[t._v("路由中有一个非常重要的概念叫路由表.\n路由表本质上就是一个映射表, 决定了数据包的指向.")]),t._v(" "),e("p",[t._v("创建脚手架:")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("vue init webpack vuerouter\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("在创建脚手架的同时,会出现出一个是否安装"),e("code",[t._v("vue-router")]),t._v("的选项,此处可以选是也可以选否,选否的话后期通过项目下的终端也可以安装"),e("code",[t._v("vue-router")])]),t._v(" "),e("p",[t._v("步骤一:")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("npm install vue-router --save\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("安装了"),e("code",[t._v("vue-router")]),t._v("后会在项目文件下多出来一个"),e("code",[t._v("router文件夹")]),t._v(",此时里面放置了"),e("code",[t._v("index.js")]),t._v(",这个是"),e("code",[t._v("vue-router的配置文件")])]),t._v(" "),e("p",[t._v("步骤二: 在模块化工程中使用它(因为是一个插件, 所以可以通过"),e("code",[t._v("Vue.use()来安装路由功能")]),t._v(")")]),t._v(" "),e("p",[t._v("第一步：导入路由对象，并且调用 "),e("code",[t._v("Vue.use(VueRouter)")])]),t._v(" "),e("p",[t._v("第二步：创建路由实例，并且传入路由映射配置")]),t._v(" "),e("p",[t._v("第三步：在Vue实例中挂载创建的路由实例")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200318190638.png",alt:""}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200318184510.png",alt:""}})]),t._v(" "),e("h2",{attrs:{id:"使用路由"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用路由"}},[t._v("#")]),t._v(" 使用路由")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("使用路由")]),t._v(" "),e("p",[t._v("第一步: 创建路由组件")]),t._v(" "),e("p",[t._v("第二步: 配置路由映射: 组件和路径映射关系")]),t._v(" "),e("p",[t._v("第三步: 使用路由: 通过"),e("code",[t._v("<router-link>")]),t._v("和"),e("code",[t._v("<router-view>")])])]),t._v(" "),e("p",[t._v("创建路由组件")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200318191015.png",alt:""}})]),t._v(" "),e("p",[t._v("配置组件和路径的映射关系")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200318191435.png",alt:""}})]),t._v(" "),e("p",[t._v("使用路由")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200318192034.png",alt:""}})]),t._v(" "),e("p",[t._v("页面效果")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200318192220.png",alt:""}})]),t._v(" "),e("p",[e("code",[t._v("<router-link>")]),t._v(": 该标签是一个"),e("code",[t._v("vue-router")]),t._v("中已经内置的组件, 它会被"),e("code",[t._v("渲染成一个<a>标签")])]),t._v(" "),e("p",[e("code",[t._v("<router-view>")]),t._v(": 该标签会根据当前的路径, "),e("code",[t._v("动态渲染出不同的组件")]),t._v(".")]),t._v(" "),e("p",[t._v("网页的其他内容, 比如顶部的"),e("code",[t._v("标题/导航")]),t._v(", 或者底部的一些版权信息等会和"),e("code",[t._v("<router-view>处于同一个等级")])]),t._v(" "),e("p",[t._v("在路由切换时, 切换的是"),e("code",[t._v("<router-view>挂载的组件")]),t._v(", 其他内容不会发生改变")]),t._v(" "),e("h2",{attrs:{id:"修改默认配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改默认配置"}},[t._v("#")]),t._v(" 修改默认配置")]),t._v(" "),e("p",[t._v("默认情况下,"),e("code",[t._v("地址栏之间的切换有一个#号")]),t._v(",我们不想使用这个#号(URL的hash),想用"),e("code",[t._v("HTML5的history")]),t._v(",使用这个也非常简单,只需要在配置文件下router实例里面加一条命令.同时还有"),e("code",[t._v("router-link")]),t._v("会将跳转的按钮默认识别成一个a标签(超链接跳转),"),e("code",[t._v("a标签的样式为router-link-active")]),t._v(",不想使用这个类名的话也可以加一条命令")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200318130038.png",alt:""}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200318193550.png",alt:""}})]),t._v(" "),e("p",[e("code",[t._v("<router-link>")]),t._v("还有一些其他属性\n"),e("code",[t._v("<router-link to='/home' tag='li'>")])]),t._v(" "),e("p",[e("code",[t._v("tag:")]),t._v(" tag可以指定"),e("code",[t._v("<router-link>之后渲染成什么组件")]),t._v(", 比如上面的代码会被"),e("code",[t._v("渲染成一个<li>元素, 而不是<a>")])]),t._v(" "),e("p",[e("code",[t._v("replace:")]),t._v(" replace不会留下history记录, 所以指定replace的情况下, 后退键返回"),e("code",[t._v("不能返回到上一个页面中")])]),t._v(" "),e("p",[e("code",[t._v("active-class")]),t._v(": 当"),e("code",[t._v("<router-link>")]),t._v("对应的路由匹配成功时, 会自动给当前元素设置一个"),e("code",[t._v("router-link-active的class")]),t._v(",设置active-class可以修改默认的名称.")]),t._v(" "),e("p",[t._v("默认情况下, 进入网站的首页, 我们希望"),e("code",[t._v("<router-view>")]),t._v("渲染首页的内容.\n但是我们的实现中, 默认没有显示首页组件, 必须让用户点击才可以.")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200318131105.png",alt:""}})]),t._v(" "),e("p",[t._v("我们在routes中又配置了一个映射.")]),t._v(" "),e("p",[t._v("path配置的是根路径: /\nredirect是重定向, 也就是我们将根路径重定向到/home的路径下, 这样就可以得到我们想要的结果了.")]),t._v(" "),e("h3",{attrs:{id:"通过代码跳转路由"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通过代码跳转路由"}},[t._v("#")]),t._v(" 通过代码跳转路由")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200318195242.png",alt:""}})]),t._v(" "),e("h2",{attrs:{id:"动态路由"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#动态路由"}},[t._v("#")]),t._v(" 动态路由")]),t._v(" "),e("p",[t._v("在某些情况下，一个页面的path路径可能是不确定的，比如我们进入用户界面时，希望是如下的路径：")]),t._v(" "),e("p",[t._v("/user/aaaa或/user/bbbb")]),t._v(" "),e("p",[t._v("除了有前面的/user之外，后面还跟上了用户的ID\n这种path和Component的匹配关系，我们称之为动态路由(也是路由传递数据的一种方式)。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200318202155.png",alt:""}})]),t._v(" "),e("p",[t._v("想要达成以上的效果")]),t._v(" "),e("p",[t._v("步骤:")]),t._v(" "),e("p",[t._v("1.创建一个新的组件User,在index.js里面引入组件,写url和映射关系")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200318202912.png",alt:""}})]),t._v(" "),e("p",[t._v("2.在App.vue里面加上"),e("code",[t._v("router-link(跳转User组件)")]),t._v(",绑定userid")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200318202731.png",alt:""}})]),t._v(" "),e("p",[t._v("3.希望path地址跳转后也显示该用户下面的内容,再写一个h2标签,里面包含userid自己的名字.")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200318203702.png",alt:""}})]),t._v(" "),e("p",[t._v("最终页面展示效果如下")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200318203646.png",alt:""}})]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("$route是new出来的VueRouter对象的方法")]),t._v(" "),e("p",[t._v("$router是谁处于活跃对象拿到的对象")])]),t._v(" "),e("h2",{attrs:{id:"路由的懒加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#路由的懒加载"}},[t._v("#")]),t._v(" 路由的懒加载")]),t._v(" "),e("p",[t._v("打包过后的dist文件")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200319111649.png",alt:""}})]),t._v(" "),e("p",[t._v("当打包构建应用时，Javascript 包会变得非常大，影响页面加载。\n如果我们能把不同路由对应的组件分割成不同的代码块，然后当路由被访问的时候才加载对应组件，这样就更加高效了")]),t._v(" "),e("p",[t._v("路由中通常会定义很多不同的页面.\n这个页面最后被打包在哪里呢? 一般情况下, 是放在一个js文件中.\n但是, 页面这么多放在一个js文件中, 必然会造成这个页面非常的大.\n如果我们一次性从服务器请求下来这个页面, 可能需要花费一定的时间, 甚至用户的电脑上还出现了短暂空白的情况.\n如何避免这种情况呢? 使用路由懒加载就可以")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("路由懒加载作用")]),t._v(" "),e("p",[t._v("路由懒加载的主要作用就是将路由对应的组件打包成一个个的js代码块.")]),t._v(" "),e("p",[t._v("只有在这个路由被访问到的时候, 才加载对应的组件")])]),t._v(" "),e("p",[t._v("以前的写法:")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200319120315.png",alt:""}})]),t._v(" "),e("p",[t._v("现在的写法:")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200319120404.png",alt:""}})]),t._v(" "),e("p",[t._v("在案例中")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200319120709.png",alt:""}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200319120836.png",alt:""}})]),t._v(" "),e("h3",{attrs:{id:"懒加载的方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#懒加载的方式"}},[t._v("#")]),t._v(" 懒加载的方式")]),t._v(" "),e("p",[t._v("方式一:结合Vue的异步组件和Webpack的代码分析")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Home")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" require"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ensure")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../components/Home.vue'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../components/Home.vue'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("方式二: AMD写法")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("About")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../components/About.vue'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" resolve"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("方式三: 在ES6中, 我们可以有更加简单的写法来组织Vue异步组件和Webpack的代码分割")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Home")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../components/Home.vue'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("在上部的案例当中,我们用到的就是方式三,也是最常用的.")]),t._v(" "),e("h2",{attrs:{id:"路由嵌套"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#路由嵌套"}},[t._v("#")]),t._v(" 路由嵌套")]),t._v(" "),e("p",[t._v("比如在home页面中, 我们希望通过/home/news和/home/message访问一些内容.")]),t._v(" "),e("p",[t._v("一个路径映射一个组件, 访问这两个路径也会分别渲染两个组件")]),t._v(" "),e("p",[t._v("路由和组件的关系如下:")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200319185350.png",alt:""}})]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("实现嵌套路由有两个步骤")]),t._v(" "),e("p",[t._v("创建对应的子组件, 并且在路由映射中配置对应的子路由")]),t._v(" "),e("p",[t._v("在组件内部使用"),e("code",[t._v("<router-view>")]),t._v("标签")])]),t._v(" "),e("p",[t._v("创建对应子组件,配置映射关系")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200319185754.png",alt:""}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200319190228.png",alt:""}})]),t._v(" "),e("p",[t._v("在组件内部使用"),e("code",[t._v("<router-view>")]),t._v("标签")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200319190350.png",alt:""}})]),t._v(" "),e("p",[t._v("最终效果")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200319190550.png",alt:""}})]),t._v(" "),e("h2",{attrs:{id:"路由传参"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#路由传参"}},[t._v("#")]),t._v(" 路由传参")]),t._v(" "),e("h3",{attrs:{id:"传递参数的方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#传递参数的方式"}},[t._v("#")]),t._v(" 传递参数的方式")]),t._v(" "),e("p",[t._v("传递参数主要有两种类型: params和query")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("params的类型")]),t._v(" "),e("p",[t._v("配置路由格式: /router/:id(动态路由)")]),t._v(" "),e("p",[t._v("传递的方式: 在path后面跟上对应的值")]),t._v(" "),e("p",[t._v("传递后形成的路径: /router/123, /router/abc")])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("query的类型")]),t._v(" "),e("p",[t._v("配置路由格式: /router, 也就是普通配置")]),t._v(" "),e("p",[t._v("传递的方式: 对象中使用query的key作为传递方式")]),t._v(" "),e("p",[t._v("传递后形成的路径: /router?id=123, /router?id=abc")])]),t._v(" "),e("p",[t._v("由于params类型上面的userid案例已经讲过,所以这里就不再多做赘述.")]),t._v(" "),e("p",[t._v("query类型:\n1.创建一个组件Profile组件,在index.js下引入,配置映射地址,在APP.vue里面配置router-link来进行访问.")]),t._v(" "),e("p",[t._v("第一种传参方式:router-link")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200319213710.png",alt:""}})]),t._v(" "),e("p",[t._v("第二种传参方式:JavaScript代码")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200319213924.png",alt:""}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200319214155.png",alt:""}})]),t._v(" "),e("p",[t._v("两种都可以实现,最终页面效果如下.")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200319214409.png",alt:""}})]),t._v(" "),e("h2",{attrs:{id:"导航守卫"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#导航守卫"}},[t._v("#")]),t._v(" 导航守卫")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("什么是导航守卫?")]),t._v(" "),e("p",[t._v("vue-router提供的导航守卫主要用来监听监听路由的进入和离开的.")]),t._v(" "),e("p",[t._v("vue-router提供了beforeEach和afterEach的钩子函数, 它们会在路由即将改变前和改变后触发.")])]),t._v(" "),e("p",[t._v("网页标题是通过"),e("code",[t._v("<title>")]),t._v("来显示的, 但是SPA只有一个固定的HTML, 切换不同的页面时, 标题并不会改变,我们可以通过JavaScript来修改"),e("code",[t._v("<title>")]),t._v("的内容."),e("code",[t._v("window.document.title = '新的标题'")]),t._v(".但是如果组件多了的话不容易维护,(因为要在多个页面执行类似的代码)")]),t._v(" "),e("p",[t._v("我们可以利用beforeEach来完成标题的修改,首先, 我们可以在钩子当中定义一些标题, 可以利用meta来定义")]),t._v(" "),e("p",[t._v("其次, 利用导航守卫,修改我们的标题")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200319224811.png",alt:""}})]),t._v(" "),e("p",[t._v("最终效果:")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200319230431.png",alt:""}})]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("导航钩子的三个参数解析")]),t._v(" "),e("p",[t._v("to: 即将要进入的目标的路由对象")]),t._v(" "),e("p",[t._v("from: 当前导航即将要离开的路由对象")]),t._v(" "),e("p",[t._v("next: 调用该方法后, 才能进入下一个钩子")])]),t._v(" "),e("p",[t._v("如果是后置钩子, 也就是afterEach, 不需要主动调用next()函数.")]),t._v(" "),e("h2",{attrs:{id:"keep-alive"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive"}},[t._v("#")]),t._v(" keep-alive")]),t._v(" "),e("p",[t._v("router-view 也是一个组件，如果直接被包在 keep-alive 里面，所有路径匹配到的视图组件都会被缓存")]),t._v(" "),e("p",[t._v("keep-alive 是 Vue 内置的一个组件，可以使被包含的组件保留状态，或避免重新渲染")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200320111118.png",alt:""}})]),t._v(" "),e("p",[t._v("activated/deactivated这两个生命周期函数,只有该组件保持了状态了使用了keep-alive时,才是有效的")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200320111753.png",alt:""}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200320111842.png",alt:""}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhongyongfeng/blogimg/img/20200320112737.png",alt:""}})])])}),[],!1,null,null,null);s.default=n.exports}}]);